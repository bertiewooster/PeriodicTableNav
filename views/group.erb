<% period_header = 0 # labels for periods %>

<!--p>Start of by-group elements listing</p-->

<% # Database queries to find adjacent groups (left and right). If one doesn't exist, flagged as such to remove navigation arrows. %>
<% begin %>
	<% @left = Element.where(:grouplin => @linear_group-1)[0] #would .first work instead? #combine with next line: no need for @left to exist, just left_exists%>
	<% left_exists = true if @left.atomic_num # OK if there is a group to the left; will go to rescue if not %>
<% rescue %>
	<% left_exists = false %>
<% end %>

<% begin %>
	<% @right = Element.where(:grouplin => @linear_group+1)[0] %>
	<% right_exists = true if @right.atomic_num # OK if there is a group to the right; will go to rescue if not %>
<% rescue %>
	<% right_exists = false %>
<% end %>

<table class="group">
	<tr>
		<th></th>
		<th>Group</th>
	</tr>
	<tr>
		<th></th>
		<th>
			<% if @linear_group == @main_pauses_group # put in spacer to keep group number centered on column on group 2 %>
				&nbsp; &nbsp; &nbsp;
			<% end %>				
			<% if left_exists %>
				<% if @linear_group == @main_resumes_group # if is linear group 17 = traditional group 3, provide link to traditional group 2 (skipping f groups) %>
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @main_pauses_group, :link => Hash["type" => 'group', 'text'=>@left_jump_arrow, "nav"=>true]} %>
				<% end %>				
				<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @linear_group-1, :link => Hash["type" => 'group', "text"=>@left_arrow, "nav"=>true]} %>
			<% else %>
				&nbsp; &nbsp;
			<% end %>
			<%= @traditional_group %>
			<% if right_exists %>
				<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @linear_group+1, :link => Hash["type" => 'group', 'text'=>@right_arrow, "nav"=>true]} %>
				<% if @linear_group == @main_pauses_group # if is linear group 2 = traditional group 2, provide link to traditional group 3 (skipping f groups) %>
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @main_resumes_group, :link => Hash["type" => 'group', 'text'=>@right_jump_arrow, "nav"=>true]} %>
				<% end %>				
			<% else # if no group to the right, put in spaces (b/c no arrows) to keep group number centered %>
				&nbsp; &nbsp;
			<% end %>
			<% if @linear_group == @main_resumes_group # put in spacer to keep group number centered on column on group 2 %>
				&nbsp; &nbsp; &nbsp;
			<% end %>				
		</th>
	</tr>

	<% @group_elements.each do |element| %>
		<% period_header += 1 #increment the period number in preparation for next period %>
	
		<% while element.period > period_header # if no element in a period, make blank table cell; continue to next period until there is an element %>
			<tr>	
				<th class="period_header period_labels_col">
					<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>period_header]} %>
	                <% period_header += 1 %>
				</th>
				<td></td>
			</tr>
		<% end %>

		<tr>
			<th class="period_header period_labels_col">
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>period_header]} %>
				<% if period_header == 4 %><div class="rotate period_word">Period</div> <% end %>
			</th>
				<td class="inPTable">
					<%= erb :'partials/pt_element', :locals=> {:element => element, :ec_class => "wide"} %>
					<% lastGroup = element.grouplin %>
				</td>
		</tr>
	<% end %> 

</table>
<!--p>End of by-period elements listing</p-->