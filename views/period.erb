<% @ethisp = @ebyp[@period-1] %>
<% @ec_class = "narrow" #in pt_element.erb, specify electron config style: small text so can fit in table %>

<!-- Database queries to find adjacent periods (above and below). If one doesn't exist, flagged as such to remove navigation arrows. -->
<% begin %>
	<% @above = Element.all(:period => @period-1)[0] %>
	<% above_exists = true if @above.atomic_num # OK if there is a group to the right; will go to rescue if not %>
<% rescue %>
	<% above_exists = false %>
<% end %>

<% begin %>
	<% @below = Element.all(:period => @period+1)[0] %>
	<% below_exists = true if @below.atomic_num # OK if there is a group to the below; will go to rescue if not %>
<% rescue %>
	<% below_exists = false %>
<% end %>

<!--p>Start of table of elements for selected period </p-->
<table>
	<tr>
		<th>Group</th>
		<% for group_header in 1..@max_group do %>
			<th>
				<% # if group_header == 1 %> Group <% # end %>
				<%= erb :group_link_generator, :locals=> {:linear_group => group_header} %>
			</th>
		<% end %>
	</tr>
	<% period_header = @period #go to the period of this page %>
	<% lastGroup = 0 %>
	<tr>
		<th class="period_header">
			Period
	        <% @link = Hash["type" => 'period'] %>
			<% if above_exists %>
				<%= erb :link_generator, :locals=> {:link => Hash["type" => 'period','number'=>@period-1, "text" => '^']} %>
				<br>
			<% end %>
			<%= @period %>
			<% if below_exists %>
				<br>
				<%= erb :link_generator, :locals=> {:link => Hash["type" => 'period','number'=>@period+1, "text" => 'âˆ¨']} %>
			<% end %>
				<% #@base = Base.all(:id => period_header)[0].base %>
		</th>
		<% @ethisp.each do |element| %>
			<% blanks = element.group - lastGroup - 1 %>
			<% while blanks > 0 %>
				<td></td>
				<% blanks = blanks - 1 %>
			<% end %>
			<td class="inPTable">
				<% @element = element %>
				<%= erb :pt_element %>
				<% lastGroup = element.group %>
			</td>
		<% end %>
 	 </tr>
</table>
<!--p>End of table of elements for selected period </p-->
