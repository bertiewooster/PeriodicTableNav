<% @ethisp = @ebyp[@period-1] %>

<!-- Database queries to find adjacent periods (above and below). If one doesn't exist, flagged as such to remove navigation arrows. -->
<% begin %>
	<% @above = Element.where(:period => @period-1)[0] %>
	<% above_exists = true if @above.atomic_num # OK if there is a group to the right; will go to rescue if not %>
<% rescue %>
	<% above_exists = false %>
<% end %>

<% begin %>
	<% @below = Element.where(:period => @period+1)[0] %>
	<% below_exists = true if @below.atomic_num # OK if there is a group to the below; will go to rescue if not %>
<% rescue %>
	<% below_exists = false %>
<% end %>

<!-- Database query to determine if there are f-block elements in this period. If no, flagged as such so will skip columns for f groups. -->

<% begin %>
	<% f_this_period = Element.where(:period=>@period, :group => @f_groups)[0] %>
	<% f_exists = true if f_this_period.atomic_num # OK if there is an f element in this period; will go to rescue if not %>
<% rescue %>
	<% f_exists = false %>
<% end %>
	
<!--p>Start of table of elements for selected period </p-->
<table <%="class='f_period'" if f_exists %>
	<tr>
		<th>Group</th>
		<% for group_header in 1..@max_group do %>
			<% if (!f_exists) && (@f_groups.include? group_header) # if no f groups in this period and current group is an f group %>
				<% next # skip this group, go to next group %>
			<% else # plot this group %>
				<th>
					<% # if group_header == 1 %> Group <% # end %>
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => group_header} %>
				</th>
			<% end %>
		<% end %>
	</tr>
	<% period_header = @period #go to the period of this page %>
	<% lastGroup = 0 %>
	<tr>
		<th class="period_header">
			Period
			<% if above_exists %>
				<br>
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@period-1, "text" => '^']} %>
				<br>
			<% end %>
			<%= @period %>
			<% if below_exists %>
				<br>
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@period+1, "text" => 'âˆ¨']} %>
			<% end %>
		</th>
		<% f_skip_done = false %>
		<% @ethisp.each do |element| %>
			<% if (!f_skip_done) && (element.group >= @main_resumes_group) && (!f_exists) # if this is traditional group 3 and there are no f elements in this period %>
				<% f_skip_done = true %>
				<% blanks = element.group - lastGroup - @num_f_groups - 1 %>
			<% else %>
				<% blanks = element.group - lastGroup - 1 %>
			<% end %>
			<% while blanks > 0 %>
				<td></td>
				<% blanks = blanks - 1 %>
			<% end %>
			<td class="inPTable">
				<%= erb :'partials/pt_element', :locals=> {:element => element, :ec_class => "narrow"} %>
				<% lastGroup = element.group %>
			</td>
		<% end %>
 	 </tr>
</table>
<!--p>End of table of elements for selected period </p-->
