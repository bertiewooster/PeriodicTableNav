<% @ethisp = @ebyp[@period-1] %>

<%# Database queries to find adjacent periods (above and below). If one doesn't exist, flagged as such to remove navigation arrows. %>
<% begin %>
	<% @above = Element.where(:period => @period-1)[0] %>
	<% above_exists = true if @above.atomic_num # OK if there is a group to the right; will go to rescue if not %>
<% rescue %>
	<% above_exists = false %>
<% end %>

<% begin %>
	<% @below = Element.where(:period => @period+1)[0] %>
	<% below_exists = true if @below.atomic_num # OK if there is a group to the below; will go to rescue if not %>
<% rescue %>
	<% below_exists = false %>
<% end %>

<%# Database query to determine if there are f-block elements in this period. If no, flagged as such so will skip columns for f groups. %>

<% begin %>
	<% f_this_period = Element.where(:period=>@period, :grouplin => @f_groups)[0] %>
	<% f_exists = true if f_this_period.atomic_num # OK if there is an f element in this period; will go to rescue if not %>
<% rescue %>
	<% f_exists = false %>
<% end %>

<!--Start of table of elements for selected period-->
<table class="period<%=' f_period' if f_exists %>">
	<tr>
		<th></th>
		<th></th>
		<th>Group</th>
		<% more_cells = f_exists ? (@max_group-1) : (@max_group-@num_f_groups-1)%>
		<% for group_header in 1..more_cells do %>
			<th></th>
		<% end %>
	</tr>
	<tr>
		<th></th>
		<th></th>
		<% for group_header in 1..@max_group do %>
			<% if (!f_exists) && (@f_groups.include? group_header) # if no f groups in this period and current group is an f group %>
				<% next # skip this group, go to next group %>
			<% else # plot this group %>
				<th>
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => group_header} %>
				</th>
			<% end %>
		<% end %>
	</tr>
	<% period_header = @period #go to the period of this page %>
	<% lastGroup = 0 %>
	<tr>
		<th class="period_word rotate <%='no_above' if !above_exists%> <%='no_below' if !below_exists%>">
			Period
		</th>
		<th class="period_header_period period_labels_col">
			<% if above_exists %>
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@period-1, "text" => @up_arrow, "nav_period"=>true]} %>
				<br>
			<% end %>
			<%= @period %>
			<% if below_exists %>
				<br>
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@period+1, "text" => @down_arrow, "nav_period"=>true]} %>
			<% end %>
		</th>
		<% f_skip_done = false %>
		<% @ethisp.each do |element| %>
			<% if (!f_skip_done) && (element.grouplin >= @main_resumes_group) && (!f_exists) # if this is traditional group 3 and there are no f elements in this period %>
				<% f_skip_done = true %>
				<% blanks = element.grouplin - lastGroup - @num_f_groups - 1 %>
			<% else %>
				<% blanks = element.grouplin - lastGroup - 1 %>
			<% end %>
			<% while blanks > 0 %>
				<td></td>
				<% blanks = blanks - 1 %>
			<% end %>
			<td class="inPTable">
				<%= erb :'partials/pt_element', :locals=> {:element => element, :ec_class => "narrow"} %>
				<% lastGroup = element.grouplin %>
			</td>
		<% end %>
			<% while lastGroup < (@max_group-@num_f_groups) %>
				<td></td>
				<% lastGroup += 1 %>
			<% end %>
 	 </tr>
</table>
<!--End of table of elements for selected period-->

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="../periodictablenav.js"></script>

<script>
	$(document).ready(function() {
		console.log("Running jQuery"); // debugging

		// When user hovers mouse over an adjacent element, highlight the electron terms compared to the origin element
		$('td.inPTable').hover(
			// On mouseover an element
			function() {
				// Change the border between the hovered-over adjacent element, and the base,
				// to show which adjacent element was selected on mobile (mouse-less) devices
				//$(this).css({"border":"1px dashed DimGray"}); // testing
				$hovering = $(this);
				$base = $hovering.nextAll('.inPTable').first(); // Select first element cell to the right of hovered-over element
				if ($base.exists()) { // if there's an element cell to the right, do terms comparison
					hovering_posn = 'left';
					terms_mouseover($hovering,$base,hovering_posn);
					console.log('There is a base element for comparison');
				}
			}, // end mouseover adjacent element
			// On mouseout adjacent element,
			function() { // Remove all highlighting of orbital(s) (and parts thereof) on hovered-over and base elements
				terms_mouseout($hovering,$base);
 			}
		);
	}); // end ready

</script>