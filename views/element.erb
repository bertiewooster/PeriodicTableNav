<!-- Database queries to find four adjacent elements. If one doesn't exist, flagged as such to modify table structure. -->
<% begin %>
	<% @above = Element.where(:period => @origin.period-1, :grouplin => @origin.grouplin)[0] %>
	<% above_exists = true if @above.atomic_num # OK if there is an element above origin; will go to rescue if not %>
<% rescue %>
	<% above_exists = false %>
<% end %>

<% begin %>
	<% @left = Element.where("period = ? AND grouplin < ?", @origin.period, @origin.grouplin).order(grouplin: :desc)[0] %>
	<% left_exists = true if @left.atomic_num # OK if there is an element left of origin; will go to rescue if not %>
<% rescue %>
	<% left_exists = false %>
<% end %>

<% begin %>
	<% @right = Element.where("period = ? AND grouplin > ?", @origin.period, @origin.grouplin).order(grouplin: :asc)[0] %>
	<% right_exists = true if @right.atomic_num # OK if there is an element right of origin; will go to rescue if not %>
<% rescue %>
	<% right_exists = false %>
<% end %>

<% begin %>
	<% @below = Element.where(:period => @origin.period+1, :grouplin => @origin.grouplin)[0] %>
	<% below_exists = true if @below.atomic_num # OK if there is an element below origin; will go to rescue if not %>
<% rescue %>
	<% below_exists = false %>
<% end %>

<table class="element">
	<tr>
		<th></th>
		<th></th>
		<th>Group</th>
	</tr>
        <tr><!-- Row for group headers -->
        	<th></th>
        	<th></th>
			<% if left_exists %>
				<th class="left_col">
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @left.grouplin} %>
					<% @traditional_group %>
				</th>
			<% end %>
			<th class="origin_col">
				<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @origin.grouplin} %>
			</th>
			<% if right_exists %>
				<th class="right_col">
					<%= erb :'partials/group_link_generator', :locals=> {:linear_group => @right.grouplin} %>
				</th>
			<% end %>
        </tr>
                        <% if above_exists %>
        <tr>
                <!--th class="period_header period_labels_col"-->
        <!-- For element above origin element -->
                        	<th colspan="2" class="period_header period_labels_col">
							<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@origin.period-1]} %>
                </th>
                
                <!-- Row for element above origin-->
                        <% if left_exists %>
                                <td class="left_col"></td>
                        <% end %>
                        <td id="above" class="inPTable origin_col adj">
							<%= erb :'partials/pt_element', :locals=> {:element => @above, :ec_class => "wide"} %>
                        </td>
                        <% if right_exists %>
                                <td class="right_col"></td>
                        <% end %>
                </tr>
                        <% end %>
                <tr>
                	<th class="period_word rotate">Period</th>
        	    	<th class="period_header period_labels_col">
				<!-- Row for left, origin, right elements-->
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@origin.period]} %>
			</th>

		<% if left_exists %>
			<td id="left" class="inPTable left_col adj">
				<!-- For element to the left of origin element -->
				<%= erb :'partials/pt_element', :locals=> {:element => @left, :ec_class => "wide"} %>
			</td>
		<% end %>
		<td id="origin" class="inPTable origin origin_col">
			<!-- For origin element -->
				<% origin_properties = 		
				{"atomic_num"=>nil,
				"symbol"=>nil,
				"name"=>nil,
				"e_config" => {"base" => true, "space_terms" => true, "term_spans"=>true},
				"name_origin" => {"label" => true},
				"atomic_weight" => {"label" => true},
				"specific_heat_capacity_j_per_gk" => {"label" => true},
				"density_g_per_cm3" => {"label" => true},
				"melting_point_k" => {"label" => true},
				"boiling_point_k" => {"label" => true},
				"electronegativity" => {"label" => true},
				"abundance_mg_per_kg" => {"label" => true}} %>

				<%= erb :'partials/pt_element', :locals=> {:element => @origin, :properties=>origin_properties, :ec_class => "wide", :no_link => true} %>
		</td>
		<% if right_exists %>
			<td id="right" class="inPTable right_col adj">
				<!-- For element to the right of origin element -->
				<%= erb :'partials/pt_element', :locals=> {:element => @right, :ec_class => "wide"} %>
			</td>
		<% end %>
	</tr>
	<% if below_exists %>
		<tr><!-- Row for element below origin-->
			<th colspan="2" class="period_header period_labels_col">
				<%= erb :'partials/link_generator', :locals=> {:link => Hash["type" => 'period','number'=>@origin.period+1]} %>
			</th>

			<% if left_exists %>
				<td class="left_col"></td>
			<% end %>
			<td id="below" class="inPTable origin_col adj">
				<!-- For element below origin element -->
				<%= erb :'partials/pt_element', :locals=> {:element => @below, :ec_class => "wide"} %>
			</td>
			<% if right_exists %>
				<td class="right_col"></td>
			<% end %>
		</tr>
	<% end %>
</table>

<%#script type="text/javascript" src="../jquery-1.10.2.min.js"></script%>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
<script src="../periodictablenav.js"></script>

<script>
	$(document).ready(function() {
		//console.log("Running jQuery"); // debugging
		$origin = $('#origin');

		// When user hovers mouse over an adjacent element, highlight the electron terms compared to the origin (base) element
		$('#above, #left, #right, #below').hover(
			// On mouseover adjacent element
			function() {
				// Change the border between the hovered-over adjacent element, and the base,
				// to show which adjacent element was selected on mobile (mouse-less) devices
				$adj = $(this);
				adj_posn = $adj.attr('id');
				terms_mouseover($adj,$origin,adj_posn);
			}, // end mouseover adjacent element
			// On mouseout adjacent element,
			function() { // Remove all highlighting of orbital(s) (and parts thereof) on hovered-over and base elements
				terms_mouseout($adj,$origin);
 			}
		);
	}); // end ready
</script>