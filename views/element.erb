<script type="text/javascript" src="../jquery-1.10.2.min.js"></script>

<script>
	$(document).ready(function() {
		console.log("Running jQuery"); // debugging
		$above_origin = $('#above span[class^="ec_"][class$="n"], #origin span[class^="ec_"][class$="n"]');
		$('#above').hover(
			function() {
				$above_origin.
				addClass('highlighted');
			}, function() {
				$above_origin.
				removeClass('highlighted');
			}
		);
		$('#left').hover(
			function() {
				$('#left .ec_base, #origin .ec_base').
				addClass('highlighted');
			}, function() {
				$('#left .ec_base, #origin .ec_base').
				removeClass('highlighted');
			}
		);
		below_ec_text = $('#below .terms').text().replace(/\s/g, '');
		console.log(below_ec_text);
		contains = below_ec_text.indexOf("f") != -1
		console.log(contains);

		$('#below').mouseover(
			function() {
				$('#below .terms').children().each(function(j) {
					console.log("For term #" + j + ":");
					term = $(this).text().replace(/\s/g, '');
					//console.log(term);
					l = term.charAt(1);
					//console.log(l);
					origin_ec_text = $('#origin .terms').text().replace(/\s/g, '');
					console.log("Origin terms:" + origin_ec_text);
					contains = origin_ec_text.indexOf(l) != -1
					console.log("Does origin contain a term of l = " + l + "?" + contains);
					if (!contains) { // if origin doesn't contain term with this l, highlight whole term in below
						$(this).addClass('highlighted');
					}
				})
			});
			
		$('#below').mouseout(
			function() {
				$('#below .terms').find('span').removeClass('highlighted');
			});

		console.log("end of terms");
	}); // end ready
</script>

<!-- Database queries to find four adjacent elements. If one doesn't exist, flagged as such to modify table structure. -->
<% begin %>
	<% @above = Element.all(:period => @origin.period-1, :group => @origin.group)[0] %>
	<% above_exists = true if @above.atomic_num # OK if there is an element above origin; will go to rescue if not %>
<% rescue %>
	<% above_exists = false %>
<% end %>

<% begin %>
	<% @left = Element.all(:period => @origin.period, :group.lt => @origin.group, :order => [ :group.desc ], :limit => 1)[0] %>
	<% left_exists = true if @left.atomic_num # OK if there is an element left of origin; will go to rescue if not %>
<% rescue %>
	<% left_exists = false %>
<% end %>

<% begin %>
	<% @right = Element.all(:period => @origin.period, :group.gt => @origin.group, :order => [ :group.asc ], :limit => 1)[0] %>
	<% right_exists = true if @right.atomic_num # OK if there is an element right of origin; will go to rescue if not %>
<% rescue %>
	<% right_exists = false %>
<% end %>

<% begin %>
	<% @below = Element.all(:period => @origin.period+1, :group => @origin.group)[0] %>
	<% below_exists = true if @below.atomic_num # OK if there is an element below origin; will go to rescue if not %>
<% rescue %>
	<% below_exists = false %>
<% end %>

<table>
        <tr><!-- Row for group headers -->
                <th>Group</th>
                        <% if left_exists %>
                                <th><a href="/group/<%=@origin.group-1 %>""><%= @origin.group-1 %></a></th>
                        <% end %>
                        <th><a href="/group/<%=@origin.group %>""><%= @origin.group %></a></th>
                        <% if right_exists %>
                                <th><a href="/group/<%=@origin.group+1 %>""><%= @origin.group+1 %></a></th>
                        <% end %>
        </tr>
        <tr>
                <th class="period_header">
                        Period<br>

        <!-- For element above origin element -->
                        <% if above_exists %>
                                <a href="/period/<%=@origin.period-1 %>""><%= @origin.period-1 %></a>
                </th>

                
                <!-- Row for element above origin-->
                        <% if left_exists %>
                                <td></td>
                        <% end %>
                        <td id="above" class="inPTable">
							<% @element = @above %>
							<%= erb :pt_element %>
                        </td>
                        <% if right_exists %>
                                <td></td>
                        <% end %>
                </tr>
                <tr>
                        <th class="period_header">
                        <% end %>
		<!-- Row for left, origin, right elements-->
				<a href="/period/<%=@origin.period %>""><%= @origin.period %></a>
			</th>
	
		<% if left_exists %>
			<td id="left" class="inPTable">
				<!-- For element to the left of origin element -->
				<% @element = @left %>
				<%= erb :pt_element %>
			</td>
		<% end %>
		<td id="origin" class="inPTable origin">
			<!-- For origin element -->
				<% @element = @origin %>
				<%= erb :pt_element %><br>
				<span class="pt_name_origin">Name origin: <%= @element.name_origin %></span><br>
				<!--span class="pt_group">group: <%= @element.group %></span><br>
				<span class="pt_period">period: <%= @element.period %></span><br-->
				<span class="pt_atomic_weight">Atomic weight: 
					<% if @element.atomic_wt_is_mass_number_of_longest_lived_isotope == 1 %>
						[<%= @element.atomic_weight.round %>]
					<% else %>
						<%= @element.atomic_weight %>
					<% end %>
				</span><br>
				<!--span class="pt_atomic_wt_is_mass_number_of_longest_lived_isotope">atomic_wt_is_mass_number_of_longest_lived_isotope: <%= @element.atomic_wt_is_mass_number_of_longest_lived_isotope %></span><br-->
				<span class="pt_specific_heat_capacity_J_per_gK">Specific heat capacity: <%= @element.specific_heat_capacity_j_per_gk %> J/gK</span><br>
				<span class="pt_density_g_per_cm3">Density: 
					<% if @element.density_is_estimated == 1 %>
						(<%= @element.density_g_per_cm3.round %>)
					<% else %>
						<%= @element.density_g_per_cm3 %>
					<% end %>
					g/cm<sup>3</sup>
				</span><br>
				<!--span class="pt_density_is_estimated">density_is_estimated: <%= @element.density_is_estimated %></span><br-->
				<span class="pt_melting_point_k">Melting point: 
					<% if @element.melt_is_estimated == 1 %>
						(<%= @element.melting_point_k.round %>)
					<% else %>
						<%= @element.melting_point_k %>
					<% end %>
					 K		
				</span><br>
				<!--span class="pt_melt_is_estimated">melt_is_estimated: <%= @element.melt_is_estimated %></span><br-->
				<span class="pt_boiling_point_k">Boiling point: 
					<% if @element.boil_is_estimated == 1 %>
						(<%= @element.boiling_point_k.round %>)
					<% else %>
						<%= @element.boiling_point_k %>
					<% end %>			
					 K		
				</span><br>				
				<!--span class="pt_boil_is_estimated">boil_is_estimated: <%= @element.boil_is_estimated %></span><br-->
				<span class="pt_electronegativity">Electronegativity (Pauling): 
					<% if @element.electronegativity.nil? %>
						unknown
					<% else %>
						<%= @element.electronegativity %>
					<% end %>									
				</span><br>
				<span class="pt_abundance_mg_per_kg">Abundance: 
					<% if @element.abundance_is_upper_limit == 1 %>
						<
					<% end %>
					<%= @element.abundance_mg_per_kg %>
					 mg/kg
				</span><br>
				<!--span class="pt_"abundance_is_upper_limit">abundance_is_upper_limit: <%= @element.abundance_is_upper_limit %></span><br-->
				<!--span class="pt_"e_config_valence">e_config_valence: <%= @element.e_config_valence %></span><br-->
		</td>
		<% if right_exists %>
			<td id="right" class="inPTable">
				<!-- For element to the right of origin element -->
				<% @element = @right %>
				<%= erb :pt_element %>
			</td>
		<% end %>
	</tr>
	<% if below_exists %>
		<tr><!-- Row for element below origin-->
		
			<th class="period_header">
				<a href="/period/<%=@origin.period+1 %>""><%= @origin.period+1 %></a>
			</th>

			<% if left_exists %>
				<td></td>
			<% end %>
			<td id="below" class="inPTable">
				<!-- For element below origin element -->
				<% @element = @below %>
				<%= erb :pt_element %>
			</td>
			<% if right_exists %>
				<td></td>
			<% end %>
		</tr>
	<% end %>
</table>